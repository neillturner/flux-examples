apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: prometheus
spec:
  interval: 30m
  url: https://prometheus-community.github.io/helm-charts

---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  chart:
    spec:
      chart: prometheus
      version: "13.2.1"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: prometheus
  interval: 5m
  install:
    remediation:
      retries: 3
  values:
    installCRDs: true
    serviceAccounts:
      server:
        name: "prometheus"
        create: false
    server:
      sidecarContainers:
        aws-sigv4-proxy-sidecar:
          image: public.ecr.aws/aws-observability/aws-sigv4-proxy:1.0
          args:
            - --name
            - aps
            - --region
            - eu-west-1
            - --host
            - aps-workspaces.eu-west-1.amazonaws.com
            - --port
            - :8005
          ports:
            - name: aws-sigv4-proxy
              containerPort: 8005
      statefulSet:
        enabled: "true"
      remoteWrite:
        - url: http://localhost:8005/workspaces/ws-99999999-9999-9999-9999-999999999999/api/v1/remote_write
    alertmanagerFiles:
      alertmanager.yml:
        # insert alertmanager config 
    serverFiles:
      ## Alerts configuration
      ## Ref: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
      alerting_rules.yml:
        groups:
          # example altering rules
          - name: analytics.rules
            rules:
              - alert: InstanceHighMemoryUsage
                annotations:
                  message: '{{ $value }}% of cluster memory is in use'
                  summary: High Memory Load
                expr: (sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes) ) / sum(node_memory_MemTotal_bytes) * 100 > 90
                for: 10m
                labels:
                  severity: warning
          # example custom kubernetes rules
          - name: kubernetes-system
            rules:
              - alert: KubeNodeNotReady
                annotations:
                  message: '{{ $labels.node }} has been unready for more than 5 minutes.'
                  runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready
                expr: kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
                for: 5m
                labels:
                  severity: critical
    # example non-automatic scraping config               
    extraScrapeConfigs: |
      - job_name: 'myapp'
        static_configs:
          - targets:
            - myapp.myapp-ns:8080

